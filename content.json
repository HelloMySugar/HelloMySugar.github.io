{"meta":{"title":"Root's Blog","subtitle":null,"description":null,"author":"Root","url":"https://blog.tea-room.cn","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-05-24T08:41:03.975Z","updated":"2019-05-24T08:41:03.963Z","comments":true,"path":"404.html","permalink":"https://blog.tea-room.cn/404.html","excerpt":"","text":"404 Not Found 很抱歉，您访问的页面不存在您可以留言告诉我哪个页面找不到，谢谢您的提议！"},{"title":"关于我","date":"2018-03-18T06:22:35.000Z","updated":"2019-05-24T07:05:31.397Z","comments":true,"path":"about/index.html","permalink":"https://blog.tea-room.cn/about/index.html","excerpt":"","text":"自我介绍我大学其实学的是通信工程，大学时期，一次机缘巧合看到土豪朋友在玩iPhone 3GS，天啦，在那个还是手机键盘咔咔敲的年代，突然一个全触屏的科技性手机迅速吸引了我的眼球。大学毕业后看到有公司招iPhone开发实习生，被iPhone影响深刻的我，毫不犹豫的加入了，成为了一名iOS开发攻城师，目前也在搞Web开发和学习小程序开发。我平时其实是一个比较闷的人，喜欢看美剧、旅游、玩游戏，爱好美食。 共勉所谓技多不压身，在互联网这个更新迭代非常迅速的时代，只有不断的提升自己来与时俱进，避免被淘汰，且职场上女性更容易被歧视，其实很不想讲出这样的话，但目前的大环境来说，特别是IT行业，程序员的保鲜程度就在20-35岁，特别对女程序员相关条件更是苛刻。 So，无论你是程序猿还是程序媛，希望我们都能在互联网这个行业继续艰苦的摸爬滚打，无论你是被生活压弯了腰还是兴趣所向在这条路上，希望你一切都好，继续努力，为了你爱的人和爱你的人！ 共勉之有话要说小伙伴你们是怎么进入到互联网的行业呢，是各种机缘巧合还是兴趣所向呢，动动你发财的小手，在评论区告诉我吧，哈哈。"},{"title":"所有分类","date":"2017-12-24T03:43:30.000Z","updated":"2019-05-24T06:33:20.549Z","comments":true,"path":"categories/index.html","permalink":"https://blog.tea-room.cn/categories/index.html","excerpt":"","text":""},{"title":"归档","date":"2017-12-20T03:44:04.000Z","updated":"2019-05-24T06:14:56.548Z","comments":true,"path":"archives/index.html","permalink":"https://blog.tea-room.cn/archives/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2017-12-24T03:43:12.000Z","updated":"2019-05-24T06:33:36.617Z","comments":true,"path":"tags/index.html","permalink":"https://blog.tea-room.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vue use","slug":"vue-use","date":"2019-05-24T09:24:17.000Z","updated":"2019-05-24T09:48:08.751Z","comments":true,"path":"post/d32be447.html","link":"","permalink":"https://blog.tea-room.cn/post/d32be447.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"OC工程怎么转换为Swift工程","slug":"octoswift","date":"2018-08-24T09:42:27.000Z","updated":"2019-05-27T06:18:59.642Z","comments":true,"path":"post/dff23fd2.html","link":"","permalink":"https://blog.tea-room.cn/post/dff23fd2.html","excerpt":"前言前段时间用Object-C正在开发一个项目，开发了差不多百分之七八十了，客户通知要求改成Swift语言开发（因为他只会Swift），好吧，一个项目用Swift来写其实也无可厚非，但是这个项目中途来换，可想而知是多么痛苦的事，已经写了好多个OC类。","text":"前言前段时间用Object-C正在开发一个项目，开发了差不多百分之七八十了，客户通知要求改成Swift语言开发（因为他只会Swift），好吧，一个项目用Swift来写其实也无可厚非，但是这个项目中途来换，可想而知是多么痛苦的事，已经写了好多个OC类。 步骤调研之前一开始也在网上找了很多资料，有OC与Swift对应功能的语法解说，也有贴代码用工具直接转的，用过iSwift，但不是很好用，识别率不高，正确率不高。 这些都感觉比较费时（客户只给了一周的时间），然后就在想，有没有一个是直接可以转工程的工具呢？别说，强大的google还真搜出来了，这个软件可以直接转换工程。 实施这个软件叫什么名呢，也不卖关子了，是一个在线转换的网站： OC2Swift 它是提供少量代码免费转换，大家可转换自己的部分代码看看正确性，还可以在线输出Swift代码结果，它可以单文件、文件夹或工程打包在线转换。 不过呢，好的软件都是收费的，具体资费我就不说了（避免托的嫌疑，有需要的上官网自己看吧），对于转换的成本来说这个价格很便宜了。 结果注意点 给大家一个建议，这个购买后使用有流量限制，建议打包的时候把静态库、framwork、SDK、第三方库等相关的剔除后打包上传，转换成功后再放置到对应路径下。 原OC代码留存（原因见下面）。 问题这个工程转换成功后，使用起来就没有一点问题了吗？ 错错错，当初我记得一开始报错不怎么多几十个吧，关键改完后，不断的重编译就暴露更多的错，这样下来估计也改了有几百个错了。 是什么类型的错误 很多都是语法的错误，而Xcode有提示修正的方法，直接鼠标点点点就改好了，比较轻松。 有些是语法不识别的问题，这个就需要自己查资料对应OC代码寻找对应的Swift代码了，所以要留存原OC代码。 有些工程设置的地方报错，但是这个很少，就几处，百度google就能解决。 然后，到了这一步，以为万事大吉了吗？哈哈，并没有，因为有些地方转换虽说没报错，但是可能会转错意，需要测试整体流程跑下，切记。 总结总体来说，这次的转换是很成功的，原本估时为一周，但是实际2～3天就完成了转换，比较高效率，所以建议大家转换Swift可采取这种方式。 比较遗憾的是，当时时间比较赶，没来得及截图留存给大家，如果觉得文章上有什么疑问，或者实际实践过程中遇到什么问题，欢迎大家在下方留言告诉我，我会第一时间回复你。","categories":[{"name":"iOS","slug":"iOS","permalink":"https://blog.tea-room.cn/categories/iOS/"},{"name":"Swift","slug":"iOS/Swift","permalink":"https://blog.tea-room.cn/categories/iOS/Swift/"}],"tags":[{"name":"Object-C","slug":"Object-C","permalink":"https://blog.tea-room.cn/tags/Object-C/"},{"name":"Swift","slug":"Swift","permalink":"https://blog.tea-room.cn/tags/Swift/"}]},{"title":"怎么使用Hexo编写博客","slug":"hexo-use","date":"2018-05-18T07:39:43.000Z","updated":"2019-05-24T08:31:41.700Z","comments":true,"path":"post/4f821c45.html","link":"","permalink":"https://blog.tea-room.cn/post/4f821c45.html","excerpt":"前言由于网上太多关于github+hexo搭建教程，搭建这里就不多说了，推荐之前搭建参考的网址： 使用hexo+github搭建免费个人博客详细教程 GitPages+Hexo搭建个人博客 搭建完成后，怎么使用hexo这个框架，网页的排版这些就很难找到相关资料了，自己研究了下，具体整理出来，方便后面的人使用。","text":"前言由于网上太多关于github+hexo搭建教程，搭建这里就不多说了，推荐之前搭建参考的网址： 使用hexo+github搭建免费个人博客详细教程 GitPages+Hexo搭建个人博客 搭建完成后，怎么使用hexo这个框架，网页的排版这些就很难找到相关资料了，自己研究了下，具体整理出来，方便后面的人使用。 目录 博客功能配置 根目录_config.yml配置 Hexo常用命令 博客功能配置主题配置官方提供很多主题，这里放两个主题，其他可以自行度娘，博主更偏爱material-x主题，哈哈。到指定目录下clone。 1234$ cd /Users/TangDan/GitHub/MyHexoBlog/themes$ hexo clean$ git clone https://github.com/iissnan/hexo-theme-next$ git clone https://github.com/xaoxuu/hexo-theme-material-x themes/material-x //本博客使用主题 现在themes目录下应该多了两个目录：next、material-x，然后到_config.yml修改theme: material-x，再执行 1234$ cd /Users/TangDan/GitHub/MyHexoBlog$ hexo g$ hexo d //推送到远端$ hexo server //本地查看 PS:运行中出现任何问题，可以先hexo clean再执行。 两个主题配置这两个主题配置其实说难不难，说简单不简单，目前我是只去研究了material-x主题的配置，过程即酸爽又享受。 Next主题官方配置文档Material-X主题官方配置文档PS：请一定要仔细的去读官方文档，不要看了这个文档一半又跑去查其他的资料，其他的资料可能更新没官方那么快，是老版本的，到最后一顿操作猛如虎，结果等于白忙，不要问我怎么知道的，我不会告诉你，= =！ 链接持久化hexo默认的链接是http://xxx.com/2017/08/18/hello-world 这种类型的，这种路径看着也挺low的，这源于站点配置文件_config.yml里的配置: permalink: :year/:month/:day/:title/. 这种默认配置的缺点就是当我们创建的博文名包含中文的名的时候，url 链接地址经常会变成一串很长的难以理解的字符串，不利于博文的链接分享，以及搜索引擎搜索，另外就是年月日都会有分隔符。我们可以让 url 链接持久化来解决这个问。 安装hexo-abbrlink插件 $ sudo npm install hexo-abbrlink 修改站点配置文件 _config.yml permalink: post/:abbrlink.html 添加 abbrlink: 123456permalink: post/:abbrlink.html # :year/:month/:day/:title/ # 文章的永久链接格式permalink_defaults: # 永久链接中个部分的默认值# abbrlink config 需安装插件hexo-abbrlinkabbrlink: alg: crc32 # 算法： crc16(default) and crc32 rep: hex # 进制： dec(default) and hex 站内搜索安装 hexo-generator-search 插件 $ sudo npm install hexo-generator-search 配置站点文件_config.yml: 1234567# 站内搜索search: path: search.xml field: postlocal_search: enable: true 根目录_config.yml配置站点配置（重要）123456title: 博客名 //网站标题subtitle: To strive, to seek, to find //网站副标题description: To strive, to seek, to find, and not to yield. //网站描述author: WenBo //您的名字language: zh-Hans //网站使用的语言 简体中文 zh-Hanstimezone: //网站时区。Hexo 默认使用您电脑的时区 URL配置1234url: http://blogwenbo.com/ //网址root: / //网站根目录permalink: :year/:month/:day/:title/ // 文章的 [永久链接](https://hexo.io/zh-cn/docs/permalinks.html) 格式 | `:year/:month/:day/:title/` |permalink_defaults: //永久链接中各部分的默认值 目录配置12345678source_dir: source //资源文件夹，这个文件夹用来存放内容。默认值：sourcepublic_dir: public //公共文件夹，这个文件夹用于存放生成的站点文件。默认值：publictag_dir: tags //标签文件夹 默认值：tagsarchive_dir: archives //归档文件夹 默认值：archivescategory_dir: categories //分类文件夹 默认值：categoriescode_dir: downloads/code //Include code 文件夹 默认值：downloads/codei18n_dir: :lang //国际化（i18n）文件夹 默认值：:langskip_render: README.md //跳过指定文件的渲染，您可使用 [glob 表达式](https://github.com/isaacs/node-glob)来匹配路径。 Git部署配置（重要）1234deploy: type: git //填git repo: git@github.com:wenmobo/wenmobo.github.io.git //SSH地址 branch: master //分支 Hexo常用命令其实搭建成功后，在/Users/TangDan/GitHub/MyHexoBlog/source/_posts里默认会有生成一个hello-world.md，这个里面描述了常用的哪些命令及意义，可在里面查看。 总体来说，提交一个修改，最好顺序执行以下命令： 123$ hexo clean$ hexo g$ hexo d","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tea-room.cn/categories/Hexo/"}],"tags":[{"name":"Hexo常用命令","slug":"Hexo常用命令","permalink":"https://blog.tea-room.cn/tags/Hexo常用命令/"},{"name":"主题搭建","slug":"主题搭建","permalink":"https://blog.tea-room.cn/tags/主题搭建/"}]}]}